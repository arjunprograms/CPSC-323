Token: identifier, Lexeme: function
Token: identifier, Lexeme: calculate_area
Token: separator, Lexeme: (
Token: identifier, Lexeme: radius
Token: identifier, Lexeme: real
Token: separator, Lexeme: )
Token: separator, Lexeme: {
Token: identifier, Lexeme: real
Token: identifier, Lexeme: area
Token: separator, Lexeme: ;
Token: keyword, Lexeme: if
Token: separator, Lexeme: (
Token: identifier, Lexeme: radius
Token: operator, Lexeme: >
Token: integer, Lexeme: 0
Token: separator, Lexeme: )
Token: separator, Lexeme: {
Token: identifier, Lexeme: area
Token: operator, Lexeme: =
Token: real, Lexeme: 3.14159
Token: operator, Lexeme: *
Token: identifier, Lexeme: radius
Token: operator, Lexeme: *
Token: identifier, Lexeme: radius
Token: separator, Lexeme: ;
Token: keyword, Lexeme: return
Token: identifier, Lexeme: area
Token: separator, Lexeme: ;
Token: separator, Lexeme: }
Token: keyword, Lexeme: else
Token: separator, Lexeme: {
Token: keyword, Lexeme: return
Token: integer, Lexeme: 0
Token: separator, Lexeme: ;
Token: separator, Lexeme: }
Token: separator, Lexeme: }
Token: keyword, Lexeme: integer
Token: identifier, Lexeme: length
Token: separator, Lexeme: ,
Token: identifier, Lexeme: width
Token: separator, Lexeme: ;
Token: identifier, Lexeme: real
Token: identifier, Lexeme: height
Token: separator, Lexeme: ,
Token: identifier, Lexeme: volume
Token: separator, Lexeme: ;
Token: identifier, Lexeme: length
Token: operator, Lexeme: =
Token: integer, Lexeme: 10
Token: separator, Lexeme: ;
Token: identifier, Lexeme: width
Token: operator, Lexeme: =
Token: integer, Lexeme: 5
Token: separator, Lexeme: ;
Token: identifier, Lexeme: height
Token: operator, Lexeme: =
Token: real, Lexeme: 7.5
Token: separator, Lexeme: ;
Token: identifier, Lexeme: volume
Token: operator, Lexeme: =
Token: identifier, Lexeme: calculate_area
Token: separator, Lexeme: (
Token: identifier, Lexeme: length
Token: separator, Lexeme: )
Token: operator, Lexeme: *
Token: identifier, Lexeme: height
Token: operator, Lexeme: /
Token: real, Lexeme: 3.0
Token: separator, Lexeme: ;
Token: keyword, Lexeme: put
Token: separator, Lexeme: (
Token: identifier, Lexeme: volume
Token: separator, Lexeme: )
Token: separator, Lexeme: ;
